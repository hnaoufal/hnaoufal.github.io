{"version":3,"sources":["scripts/helpers/router.helper.ts","scripts/helpers/dom.helper.ts","scripts/components/Ui.ts","scripts/constants/config.ts","scripts/components/Navigation/Navigation.observer.ts","scripts/utilities/Observable.ts","scripts/pages/Home.ts","scripts/App.ts","scripts/pages/Leistung.ts","scripts/pages/Motive.ts","scripts/components/Form/validators/required.rule.ts","scripts/components/Form/validators/string.rule.ts","scripts/components/Form/validators/length.rule.ts","scripts/components/Form/validators/email.rule.ts","scripts/components/Form/ContactForm.ts","scripts/pages/Contact.ts","scripts/pages/404.ts","scripts/utilities/Router.ts","scripts/pages/Technik.ts","scripts/pages/SuccessPage.ts","main.ts"],"names":[],"mappings":"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","file":"main.731610c5.js","sourceRoot":"..","sourcesContent":["export const routeChanger = (page, container, cb?) => {\n    container.innerHTML = '';\n    if (cb) {\n      cb();\n    }\n\n    if (page.htmlContainer.dataset.router === page.route) {\n      container.appendChild(page.htmlContainer);\n      page.onLoad();\n      return page;\n    }\n}\n","export const $elId = document.getElementById.bind(document);\nexport const $elClass = document.getElementsByClassName.bind(document);\nexport const $elQAll = document.querySelectorAll.bind(document);\n","import { $elId } from \"../helpers/dom.helper\";\n\nclass Ui {\n  registerThemeSwitcher(id) {\n    const switcher = $elId(id);\n    const light = '<i class=\"fas fa-lightbulb\"></i> Hell';\n    const dark = '<i class=\"far fa-lightbulb\"></i> Dunkel';\n    const htmlDataSet = document.documentElement.dataset;\n\n\n    switcher.addEventListener('click', () => {\n      if (htmlDataSet.theme !== 'light') {\n        htmlDataSet.theme = 'light';\n        switcher.innerHTML = light;\n      } else {\n        htmlDataSet.theme = 'dark';\n        switcher.innerHTML = dark;\n      }\n    })\n  }\n\n  registerMobileMenu(burgerId, burgerMenuId) {\n    const burger = $elId(burgerId);\n    const burgerMenu = $elId(burgerMenuId);\n\n    burger.addEventListener('click', () => {\n      burgerMenu.classList.toggle('active');\n    });\n\n    return burgerMenu;\n  }\n}\n\nexport const UiBuilder = new Ui();\n","export const routePaths = {\n  home: '#/',\n  leistung: '#/leistung',\n  contact: '#/contact',\n  motive: '#/motive',\n  technik: '#/technik',\n  success: '#/success',\n  notFound: '#/404',\n}\n\nexport const ELEMENTS = {\n  routeContainer: 'route-container',\n  themeSwitcher: 'theme-switcher',\n  burgerBar: 'burger-bar',\n  burgerBarMenu: 'burger-bar-menu',\n  dataRouter: '[data-route]'\n}\n\nexport enum CSSClass {\n  ACTIVE = 'active'\n}\n","import { IObserver } from \"../../utilities/IObserver\";\nimport { $elQAll } from \"../../helpers/dom.helper\";\nimport { CSSClass, ELEMENTS } from \"../../constants/config\";\n\nexport class NavigationObserver implements IObserver {\n  update(data: any): void {\n    const routes = $elQAll(ELEMENTS.dataRouter);\n\n    routes.forEach(route => {\n      if (data === route.getAttribute('href')) {\n        route.classList.add(CSSClass.ACTIVE);\n      } else {\n        route.classList.remove(CSSClass.ACTIVE);\n      }\n    })\n  }\n}\n","import { IObserver } from \"./IObserver\";\n\nexport class Observable<T> {\n  private _observers: IObserver[] = [];\n\n  subscribe(observer: IObserver): void {\n    this._observers.push(observer);\n  }\n\n  unsubscribe(observerToDel: IObserver): void {\n    this._observers = this._observers.filter(channel => channel === observerToDel);\n  }\n\n  notifyAll(message: T) {\n    for (let observer of this._observers) {\n      observer.update(message);\n    }\n  }\n}\n","import { IPage } from \"../utilities/IPage\";\nimport { $elId } from \"../helpers/dom.helper\";\nimport { router } from \"../../main\";\n\nexport class HomePage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n  callToAction: HTMLElement;\n  callToActionFunc: (e: Event) => any;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {\n    const ID = {\n      callToAction: \"callToAction\",\n    }\n\n    this.callToAction = $elId(ID.callToAction);\n    this.callToActionFunc = e => {\n      e.preventDefault();\n      router.navigate('#/contact');\n    };\n\n    this.callToAction.addEventListener(\"click\", this.callToActionFunc);\n  }\n\n  onUnload(): void {\n    if (this.callToAction) {\n      this.callToAction.removeEventListener(\"click\", this.callToActionFunc)\n    }\n  }\n}\n","import { Router } from './utilities/Router';\nimport { routeChanger } from \"./helpers/router.helper\";\nimport { $elId } from \"./helpers/dom.helper\";\nimport { UiBuilder } from \"./components/Ui\";\nimport { NavigationObserver } from \"./components/Navigation/Navigation.observer\";\nimport { Observable } from \"./utilities/Observable\";\n\nimport { IPage } from \"./utilities/IPage\";\nimport { CSSClass, ELEMENTS, routePaths } from \"./constants/config\";\nimport { HomePage } from \"./pages/Home\";\n\nexport class App {\n  pages: IPage[] = [];\n  routeObservable: Observable<string>;\n  navObserver: NavigationObserver;\n  currentPage: IPage = new HomePage('#/');\n\n  buildPages(pages: IPage[]) {\n    pages.forEach(page => {\n     this.pages.push(page);\n    });\n  }\n\n  run(router: Router) {\n    window.onload = () => {\n      /* Navigation */\n      this.navObserver = new NavigationObserver();\n      this.routeObservable = new Observable<string>();\n      this.routeObservable.subscribe(this.navObserver);\n\n      /* Router */\n      const routeContainer = $elId(ELEMENTS.routeContainer);\n      router.init();\n\n      const children = [...routeContainer.children];\n\n      for(let child of children) {\n        this.pages.forEach(page => {\n          if (child.dataset.router === page.route) {\n            page.htmlContainer = child;\n          }\n        });\n      }\n\n      routeContainer.innerHTML = '';\n\n      this.pages.forEach(page => {\n        router.route(page.route, () => {\n          this.currentPage = routeChanger(page, routeContainer, () => {\n            this.currentPage.onUnload();\n          });\n        });\n      });\n\n      router.fallback = () => {\n        const errorPage = [...this.pages].find(a => a.route === routePaths.notFound);\n        routeChanger(errorPage, routeContainer);\n      };\n\n      UiBuilder.registerThemeSwitcher(ELEMENTS.themeSwitcher);\n      const burgerMenu = UiBuilder.registerMobileMenu(ELEMENTS.burgerBar, ELEMENTS.burgerBarMenu);\n\n\n      router.onNavigate = (data: string) => {\n        this.routeObservable.notifyAll(data);\n        burgerMenu.classList.remove(CSSClass.ACTIVE)\n      }\n\n      if (location.hash === '' && location.pathname === '/') {\n        router.navigate(routePaths.home);\n      } else {\n        router.navigate(location.hash);\n      }\n    }\n\n    this._unload();\n  }\n\n  _unload() {\n    window.addEventListener('beforeunload', function(event) {\n      this.routeObservable.unsubscribe(this.navObserver);\n    }.bind(this));\n  }\n}\n","import { IPage } from \"../utilities/IPage\";\n\nexport class LeistungPage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {}\n\n  onUnload(): void {}\n}\n","import { IPage } from \"../utilities/IPage\";\n\nexport class MotivePage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {}\n\n  onUnload(): void {}\n}\n","export const requiredV = e => e && e.length > 0;\n","export const stringV = e => !parseInt(e) && (typeof e === 'string' || e instanceof String);\n","export const lengthV = (min,max) => e => e.length < max && e.length > min;\n","export const emailV = e => String(e)\n  .toLowerCase()\n  .match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n","import { requiredV } from \"./validators/required.rule\";\nimport { stringV } from \"./validators/string.rule\";\nimport { lengthV } from \"./validators/length.rule\";\nimport { emailV } from \"./validators/email.rule\";\n\nexport const formMap = {\n  vorname: {\n    rules: [\n      {\n        rule: requiredV,\n        errorMsg: \"Pflichtfeld\"\n      },\n      {\n        rule: stringV,\n        errorMsg: \"Bitte nur Buchstaben\"\n      },\n      {\n        rule: lengthV(1, 250),\n        errorMsg: \"Muss zwischen 2 - 250 Buchstaben sein\"\n      }\n    ]\n  },\n  nachname: {\n    rules: [\n      {\n        rule: requiredV,\n        errorMsg: \"Pflichtfeld\"\n      },\n      {\n        rule: stringV,\n        errorMsg: \"Bitte nur Buchstaben\"\n      },\n      {\n        rule: lengthV(1, 250),\n        errorMsg: \"Muss zwischen 2 - 250 Buchstaben sein\"\n      }\n    ]\n  },\n  email: {\n    rules: [\n      {\n        rule: requiredV,\n        errorMsg: \"Pflichtfeld\"\n      },\n      {\n        rule: emailV,\n        errorMsg: \"Falsches Email Format\"\n      },\n    ]\n  },\n  topic: {\n    rules: [\n      {\n        rule: requiredV,\n        errorMsg: \"Pflichtfeld\"\n      },\n    ]\n  },\n  textarea: {\n    rules: [\n      {\n        rule: requiredV,\n        errorMsg: \"Pflichtfeld\"\n      },\n      {\n        rule: lengthV(1, 500),\n        errorMsg: \"Muss zwischen 2 - 500 Buchstaben sein\"\n      }\n    ]\n  }\n};\n","import { IPage } from \"../utilities/IPage\";\nimport { $elId, $elQAll } from \"../helpers/dom.helper\";\nimport { formMap } from \"../components/Form/ContactForm\";\nimport { router } from \"../../main\";\n\nexport class ContactPage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {\n    this._resetForm();\n    this._initForm();\n    this._handleOnReset();\n    this._handleOnSubmit();\n  }\n\n  _initForm() {\n    const elements = $elQAll('[data-form-validate]');\n\n    [...elements].forEach(element => {\n      const forAttr = element.getAttribute('for');\n      const formElement = element.querySelectorAll(`#${forAttr}`)[0];\n\n      formElement.addEventListener('blur', () => {\n        this._validateFormElement(formElement, element, forAttr);\n      })\n\n      formElement.addEventListener('keyup', () => {\n        this._validateFormElement(formElement, element, forAttr);\n        this._handleTextareaLength();\n      })\n    });\n  }\n\n  _handleOnSubmit() {\n    $elId('submit').addEventListener('click', e => {\n      e.preventDefault();\n\n      if (!this._validateForm()) {\n        this._getFormValues();\n        $elId('submit').classList.add('button-loading');\n        setTimeout(() => {\n          $elId('submit').classList.remove('button-loading');\n          router.navigate('#/success')\n        }, 2000);\n      }\n    });\n  }\n\n  _handleOnReset() {\n    $elId('reset').addEventListener('click', e => {\n      e.preventDefault();\n      this._resetForm();\n    })\n  }\n\n  _resetForm() {\n    const elements = $elQAll('[data-form-element]');\n\n    [...elements].forEach(element => {\n      element.value = '';\n      element.removeAttribute('aria-invalid');\n    });\n\n    $elQAll('[data-form-validate]').forEach(validElement => {\n      const errorElement = validElement.querySelectorAll(`[data-form-error]`)[0];\n      errorElement.innerHTML = '';\n    });\n  }\n\n  _validateForm() {\n    const elements = $elQAll('[data-form-validate]');\n    let isError = false;\n\n    [...elements].forEach(element => {\n      const forAttr = element.getAttribute('for');\n      const formElement = element.querySelectorAll(`#${forAttr}`);\n      const errorElement = element.querySelectorAll(`[data-form-error]`)[0];\n      const value = formElement[0].value;\n      let errors = [];\n\n      formMap[forAttr].rules.forEach(rulesWithError => {\n        if (!rulesWithError.rule(value)) {\n          errors.push(rulesWithError.errorMsg);\n          isError = true;\n        }\n      })\n\n      if (isError) {\n        formElement[0].setAttribute('aria-invalid', 'true');\n      } else {\n        formElement[0].setAttribute('aria-invalid', 'false');\n      }\n\n      errorElement.innerHTML = errors.join(', ');\n    });\n\n    return isError;\n  }\n\n  _validateFormElement(formElement, element, forAttr) {\n    const errorElement = element.querySelectorAll(`[data-form-error]`)[0];\n    const value = formElement.value;\n    let errors = [];\n\n    formMap[forAttr].rules.forEach(rulesWithError => {\n      if (!rulesWithError.rule(value)) {\n        errors.push(rulesWithError.errorMsg);\n      }\n    });\n\n    if (errors.length > 0) {\n      formElement.setAttribute('aria-invalid', 'true');\n    } else {\n      formElement.setAttribute('aria-invalid', 'false');\n    }\n\n    errorElement.innerHTML = errors.join(', ');\n  }\n\n  _getFormValues() {\n    const elements = $elQAll('[data-form-element]');\n\n    [...elements].forEach(element => {\n      if (element.type === 'radio') {\n        if (element.checked) {\n          console.log(element.type, element.value);\n        }\n      } else {\n        console.log(element.type, element.value);\n      }\n    });\n  }\n\n  _handleTextareaLength() {\n    const lengthElement = $elId('textarea-length');\n    const textarea = $elId('textarea')\n\n    lengthElement.innerHTML = 500 - textarea.value.length;\n  }\n\n  onUnload(): void {}\n}\n","import { IPage } from \"../utilities/IPage\";\n\nexport class ErrorPage404 implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {}\n\n  onUnload(): void {}\n}\n","export class Router {\n  routes = [];\n  fallback?;\n  onNavigate?;\n\n  init() {\n    window.onhashchange = () => this.navigate(location.hash);\n  }\n\n  route(pattern, handler) {\n    this.routes.push({ pattern, handler });\n  }\n\n  navigate(hash) {\n    if (location.hash !== hash) {\n      location.hash = hash;\n    }\n\n    if (this.onNavigate && this.onNavigate instanceof Function) {\n      this.onNavigate(hash);\n    }\n\n    for(let route of this.routes) {\n      if (typeof route.pattern === 'string' && route.pattern === hash) {\n        return route.handler(hash);\n      }\n\n      if (route.pattern instanceof RegExp && hash.match(route.pattern)) {\n        return route.handler(hash);\n      }\n    }\n\n    if (this.fallback && this.fallback instanceof Function) {\n      return this.fallback(hash);\n    }\n  }\n}\n\n","import { IPage } from \"../utilities/IPage\";\n\nexport class TechnikPage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {}\n\n  onUnload(): void {}\n}\n","import { IPage } from \"../utilities/IPage\";\n\nexport class SuccessPage implements IPage {\n  htmlContainer: HTMLElement;\n  route: string;\n\n  constructor(path: string) {\n    this.route = path;\n  }\n\n  onLoad(): void {}\n\n  onUnload(): void {}\n}\n","import { App } from './scripts/App';\n\nimport { HomePage } from \"./scripts/pages/Home\";\nimport { LeistungPage} from \"./scripts/pages/Leistung\";\nimport { MotivePage } from \"./scripts/pages/Motive\";\nimport { ContactPage } from \"./scripts/pages/Contact\";\nimport { ErrorPage404 } from \"./scripts/pages/404\";\nimport { Router } from \"./scripts/utilities/Router\";\nimport { TechnikPage } from \"./scripts/pages/Technik\";\nimport { SuccessPage } from \"./scripts/pages/SuccessPage\";\n\nimport { routePaths } from \"./scripts/constants/config\";\n\nconst homePage = new HomePage(routePaths.home);\nconst leistungPage = new LeistungPage(routePaths.leistung);\nconst motivePage = new MotivePage(routePaths.motive);\nconst contactPage = new ContactPage(routePaths.contact);\nconst technikPage = new TechnikPage(routePaths.technik);\nconst errorPage = new ErrorPage404(routePaths.notFound);\nconst successPage = new SuccessPage(routePaths.success);\n\nconst pages = [\n  homePage,\n  leistungPage,\n  motivePage,\n  technikPage,\n  contactPage,\n  successPage,\n  errorPage\n];\n\nconst app = new App();\n\napp.buildPages(pages);\n\nexport const router = new Router();\napp.run(router);\n"]}