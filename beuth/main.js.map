{"version":3,"sources":["./src/environments/environment.ts","./src/app/grammar/grammar.component.ts","./src/app/grammar/grammar.component.html","./src/app/keller/keller.component.ts","./src/app/keller/keller.component.html","./src/app/tm/tm.component.ts","./src/app/tm/tm.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dea/dea.component.ts","./src/app/dea/dea.component.html","./src/app/main/main.module.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grammar',\n  templateUrl: './grammar.component.html',\n  styleUrls: ['./grammar.component.scss']\n})\nexport class GrammarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>grammar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-keller',\n  templateUrl: './keller.component.html',\n  styleUrls: ['./keller.component.scss']\n})\nexport class KellerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>keller works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tm',\n  templateUrl: './tm.component.html',\n  styleUrls: ['./tm.component.scss']\n})\nexport class TmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tm works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'machine';\n}\n","<p>\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Automaten-Simulator</span>\n    <span class=\"divider\"> | </span>\n    <a [routerLink]=\"['/']\" [routerLinkActive]=\"['active']\"  [routerLinkActiveOptions]=\"{exact: true}\" mat-button class=\"menu-link\">\n      Home\n    </a>\n    <a [routerLink]=\"['/dea']\" [routerLinkActive]=\"['active']\" mat-button class=\"menu-link\">\n      DEA\n    </a>\n    <a [routerLink]=\"['/grammar']\" [routerLinkActive]=\"['active']\" mat-button class=\"menu-link\">\n      Grammatik\n    </a>\n    <a [routerLink]=\"['/keller']\" [routerLinkActive]=\"['active']\" mat-button class=\"menu-link\">\n      Kellerautomat\n    </a>\n    <a [routerLink]=\"['/tm']\" [routerLinkActive]=\"['active']\" mat-button href=\"/tm\" class=\"menu-link\">\n      TM\n    </a>\n  </mat-toolbar>\n</p>\n\n<div class=\"container\">\n  <div class=\"box\">\n    <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n      <ul>\n        <li><a [routerLink]=\"['/']\">Automation-Simulator</a></li>\n        <li class=\"is-active\"><a href=\"#\">Home</a></li>\n      </ul>\n    </nav>\n\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dea',\n  templateUrl: './dea.component.html',\n  styleUrls: ['./dea.component.scss']\n})\nexport class DeaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dea works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main.component';\nimport {AppRoutingModule} from \"../app-routing.module\";\n\n\n\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n  ]\n})\nexport class MainModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MainModule} from \"./main/main.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MainModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MainComponent} from \"./main/main.component\";\nimport {DeaComponent} from \"./dea/dea.component\";\nimport {GrammarComponent} from \"./grammar/grammar.component\";\nimport {KellerComponent} from \"./keller/keller.component\";\nimport {TmComponent} from \"./tm/tm.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    canActivate: [],\n  },\n  {\n    path: 'dea',\n    component: DeaComponent,\n    canActivate: [],\n  },\n  {\n    path: 'grammar',\n    component: GrammarComponent,\n    canActivate: [],\n  },\n  {\n    path: 'keller',\n    component: KellerComponent,\n    canActivate: [],\n  },\n  {\n    path: 'tm',\n    component: TmComponent,\n    canActivate: [],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <div class=\"columns\">\n    <div class=\"column has-text-centered\">\n      <h1 class=\"is-title is-1\">Willkommen zum Automaten-Simulator</h1>\n      <img src=\"beuth/assets/images/java_error_in_idea_5723.png\" />\n    </div>\n  </div>\n  <div class=\"columns\">\n    <div class=\"column\">\n      <h2 class=\"is-title is-2\">About Me</h2>\n      <p>\n        Meine Name ist Hicham Naoufal und ich gruesse euch zu diesem Simulator zum Kurs Technische Informatik im SS21.\n      </p>\n      <hr />\n      <h2 class=\"is-title is-2\">Zum Projekt</h2>\n      <p>Dieses Projekt ist im Kurs Technische Informatik unter der Leitung von <b>Prof. Dr. Felix Gers</b> <a href=\"https://prof.beuth-hochschule.de/gers/\" target=\"_blank\"> (Link)</a> entstanden.</p>\n      <p>Folgende 4 Projekte sind hier implementiert:</p>\n      <ul>\n        <li>Projektaufgabe P1: DEA</li>\n        <li>Projektaufgabe P2: Grammatik</li>\n        <li>Projektaufgabe P3: Kellerautomat</li>\n        <li>Projektaufgabe P4: TM</li>\n      </ul>\n      <hr />\n      <h2 class=\"is-title is-2\"><a [routerLink]=\"['/dea']\">DEA</a></h2>\n      <h3>Aufgabenstellung:</h3>\n      Simulieren und visualisieren Sie die Reber Grammar (RG) als Deterministischen Endlichen Automaten (DEA).\n      Dabei sollen Sie zunächst zufällige Zeichenketten generieren. Mithilfe des DEA ist es leicht korrekte Zeichenketten zu erstellen. Alternativ lassen sich auch falsche Zeichenketten, die nicht erkannt werden, erzeugen. Modifizieren Sie dazu mithilfe des Automaten eine korrekte Zeichenkette, indem Sie an einer bestimmten Stelle eine fehlerhafte Eingabe anhand einer Kannte, die nicht existiert, erzeugen, und diese gegen die korrekte austauschen.\n      In einem zweiten Schritt prüfen Sie die Eingabe mittels des DEA.\n      ACHTUNG: Sie sollen NICHT die Embedded Reber Grammar (ERG), sondern nur den inneren Teil, die Reber Grammar (RG), betrachten.\n      Anwendung und Abgabe: Es wird eine Web-Anwendung erstellt, siehe Kursplan.\n      <br />\n      <br />\n      <h3>Visualisierung:</h3>\n      Stellen Sie den DEA als Tabelle und als Graph da. Die Verarbeitung der Eingabe wird schrittweise angezeigt. Schließlich wird das Endzustand und das Ergebnis (erkannt oder nicht erkannt) des Automaten dargestellt.\n      Bei der Umsetzung in HTML gibt es viele Möglichkeiten. Sie können eine SVG Grafik nutzen, Sie könnenden Canvas verwenden, Sie können mit HTML Elementen oder einer Image-Map arbeiten.\n      <br />\n      <br />\n      <h3>Interaktion:</h3>\n      Man kann in der Anwendung richtige und falsche Zeichenketten als Beispiel erzeugen lassen. Auch die Eingabe einer Zeichenkette ist möglich. Diese kann dann schrittweise oder automatisch animiert verarbeitet werden. Die Animationsgeschwindigkeit ist einstellbar.\n      <br />\n      <br />\n      <h3>Gestaltung:</h3>\n      Achten Sie auf eine sinnvolle Semantik bei der Farbgestaltung und ein übersichtliches Layout. Beachten Sie die Human/Mensch-Computer-Interaction (HCI) Kriterien  beim Interaktionsdesign: ISO 9241-11 Anforderungen an die Gebrauchstauglichkeit und ISO 9241-110 Grundsätze der Dialoggestaltung: https://de.wikipedia.org/wiki/ISO_9241. Ihre Anwendung sollte funktional (Aufgabenangemessenheit) und benutzerfreundlich (Usability) und mit angemessenem Feedback und einer [kontextsensitive] Hilfe ausgestattet sein.\n      <hr />\n      <h2 class=\"is-title is-2\">Grammatik</h2>\n      TBD\n      <hr />\n      <h2 class=\"is-title is-2\">Kellerautomat</h2>\n      TBD\n      <hr />\n      <h2 class=\"is-title is-2\">TM</h2>\n      TBD\n    </div>\n  </div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
